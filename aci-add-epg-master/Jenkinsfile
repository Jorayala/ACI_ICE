pipeline {
    agent any

    environment {
         WEBEXAUTH = credentials('webex-auth-token')
         WEBEXROOM = credentials('webex-roomid')
    }

    stages {
        //stage("Clone Git Repo"){
            //steps {
                //echo 'Cloning Git Repos'
            //    git branch: 'master', credentialsId:'93f1c9db-b770-40b9-a984-662daeb8dae8', url: 'https://wwwin-github.cisco.com/bac-demo/aci-add-epg.git'
            //}
        //}
       
        stage("deploy"){
            steps {
                echo 'Deploying the application....'
                ansibleTower inventory: 'ACI', jobTemplate: 'ACI2', jobType: 'run', throwExceptionWhenFail: false, towerCredentialsId: 'a284a628-688e-4055-ad06-74b5f059f2c9', towerLogLevel: 'false', towerServer: 'AWX_demo'
            
            }
        }
        post { 
        success { 
          
            wrap([$class: 'BuildUser']) {
            sh """
                    curl --location --request POST 'https://webexapis.com/v1/messages' \
--header "Authorization: Bearer ${WEBEXAUTH}" \
--header 'Content-Type: application/json' \
--data-raw '{
  "roomId": "${WEBEXROOM}",
  
  "markdown": "Started at: ${BUILD_TIMESTAMP}\\nAuthor:${env.BUILD_USER}(${env.BUILD_USER_EMAIL})\\nJob URL: ${Job_URL}\\nBuild ID: ${BUILD_NUMBER}\\nBuild Logs: ${BUILD_URL}consoleText\\nResult: ${currentBuild.currentResult}" 
}'
         """
                
            }
        }
        failure { 
            
            sh """
                    curl --location --request POST 'https://webexapis.com/v1/messages' \
--header "Authorization: Bearer ${WEBEXAUTH}" \
--header 'Content-Type: application/json' \
--data-raw '{
  "roomId": "${WEBEXROOM}",
  
  "markdown": "Started at: ${BUILD_TIMESTAMP}\\nAuthor:${env.BUILD_USER}(${env.BUILD_USER_EMAIL})\\nJob URL: ${Job_URL}\\nBuild ID: ${BUILD_NUMBER}\\nBuild Logs: ${BUILD_URL}consoleText\\nResult: ${currentBuild.currentResult}" 
}'
         """
            
        }
    }
}

